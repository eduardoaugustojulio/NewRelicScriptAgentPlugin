<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project name="NewRelicScriptAgentPlugin" default="jar" basedir=".">
  
  <property name="dist.name" value="NewRelicScriptAgentPlugin"/>
  <property name="dist.dir" location="dist/"/>
  <property name="version" value="0.0.1"/>
  <property name="jar.file" value="${dist.dir}/${dist.name}-${version}.jar"/>
  
  <property name="src.dir" value="src"/>
  <property name="build.dir" value="build"/>
  <property name="lib.dir" value="lib"/>

  <property name="json-simple.jar" value="${lib.dir}/json-simple-1.1.1.jar"/>
  <property name="logback-classic.jar" value="${lib.dir}/logback-classic-1.1.1.jar"/>
  <property name="logback-core.jar" value="${lib.dir}/logback-core-1.1.1.jar"/>
  <property name="slf4j-api.jar" value="${lib.dir}/slf4j-api-1.7.6.jar"/>
   
  <path id="classpath">
    <pathelement location="${json-simple.jar}"/>
    <pathelement location="${logback-classic.jar}"/>
    <pathelement location="${logback-core.jar}"/>
    <pathelement location="${slf4j-api.jar}"/>
  </path>

  <property name="tests.src.dir" value="test/src"/>
  <property name="tests.lib.dir" value="test/lib"/>
  <property name="tests.build.dir" value="build/test"/>

  <property name="cglib-nodep.jar" value="${tests.lib.dir}/cglib-nodep-2.2.3.jar"/>
  <property name="easymock.jar" value="${tests.lib.dir}/easymock-3.2.jar"/>
  <property name="hamcrest.jar" value="${tests.lib.dir}/hamcrest-all-1.3.jar"/>
  <property name="junit.jar" value="${tests.lib.dir}/junit-4.11.jar"/>
  <property name="objenesis.jar" value="${tests.lib.dir}/objenesis-1.3.jar"/>

  <path id="classpath.test">
    <pathelement location="${cglib-node.jar}"/>
    <pathelement location="${easymock.jar}"/>
    <pathelement location="${hamcrest.jar}"/>
    <pathelement location="${junit.jar}"/>
    <pathelement location="${objenesis.jar}"/>
  </path>
    
  <target name="clean">
    <echo>Cleaning project...</echo>
    <delete dir="${build.dir}"/>
    <delete file="${jar.file}"/>
    <echo>Done.</echo>
  </target>

  <target name="init" depends="clean">
    <echo>Creating directory: ${build.dir}</echo>
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${tests.build.dir}"/>
  </target>

  <target name="compile" depends="init">
    <echo>Building project...</echo>
    <javac srcdir="${src.dir}" destdir="${build.dir}" debug="true" includeantruntime="false">
      <classpath refid="classpath"/>
    </javac>
    <echo>Done.</echo>
  </target>

  <target name="jar" depends="compile" description="create a Jar file for the application">
    <jar destfile="${jar.file}">
      <manifest>
        <attribute name="Specification-Title" value="New Relic Script Agent Using Platform Metric Publish SDK"/>
        <attribute name="Specification-Vendor" value="New Relic, Inc."/>
        <attribute name="Implementation-Vendor" value="New Relic, Inc."/>
        <attribute name="Built-Date" value="${TODAY}"/>
        <attribute name="Specification-Version" value="${version}"/>
        <attribute name="Implementation-Version" value="${version} ${TODAY}"/>
        <attribute name="Main-Class" value="com.scriptagent.Main"/>
      </manifest>
      <fileset dir="${build.dir}"/>
      <zipfileset dir="${lib.dir}" includes="**/*.jar"/>
    </jar>
  </target>

  <target name="test-compile" depends="compile">
    <javac srcdir="${tests.src.dir}:${src.dir}" destdir="${tests.build.dir}" debug="true" includeantruntime="false">
       <classpath>
         <path refid="classpath"/>
         <path refid="classpath.test"/>
      </classpath>
    </javac>
    <echo>Done.</echo>
  </target>

  <target name="test" depends="test-compile">
    <junit printsummary="on" haltonfailure="yes" fork="true">
        <classpath>
          <path refid="classpath"/>
          <path refid="classpath.test"/>
          <pathelement location="${tests.build.dir}"/>
        </classpath>
        <formatter type="brief" usefile="false" />
        <batchtest>
            <fileset dir="${tests.src.dir}" includes="**/*Test.java" />
        </batchtest>
    </junit>
  </target>

</project>
